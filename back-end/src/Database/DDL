CREATE TABLE Student (
    studentId INT PRIMARY KEY AUTO_INCREMENT,
    fullName VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    gender VARCHAR(10) NOT NULL,
    phoneNum VARCHAR(15) NOT NULL,
    regDate DATE NOT NULL,
    educationalStatus VARCHAR(20),  -- Alvl/Olvl/inter/Matric/None
    currentClass VARCHAR(20) NOT NULL, -- class(KG--A2)/None
    
);

CREATE TABLE Tutor (
    tutorId INT PRIMARY KEY AUTO_INCREMENT,
    fullName VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    gender VARCHAR(10) NOT NULL,
    phoneNum VARCHAR(15) NOT NULL,
    regDate DATE NOT NULL,
);

CREATE TABLE Gig (
    gigId INT PRIMARY KEY AUTO_INCREMENT,
    studentId INT,
    gigTitle VARCHAR(255) NOT NULL,
    studentsinstitute VARCHAR(255),  
    studentArea VARCHAR(255),  
    ExpectedFee INT NOT NULL,
    createdAt DATE NOT NULL,
    status ENUM('open', 'closed')  DEFAULT 'open',  -- open or closed
    details TEXT,
    gigType VARCHAR(20) NOT NULL,  -- home or online
    FOREIGN KEY (studentId) REFERENCES Student(studentId) ON DELETE CASCADE
);

CREATE TABLE TutorGigApplication (
    gigId INT,
    tutorId INT,
    applicationStatus ENUM('approved', 'rejected', 'pending') DEFAULT 'pending',
    appliedAt DATE NOT NULL,
    PRIMARY KEY (gigId, tutorId),
    FOREIGN KEY (gigId) REFERENCES Gig(gigId) ON DELETE CASCADE,
    FOREIGN KEY (tutorId) REFERENCES Tutor(tutorId) ON DELETE CASCADE
);

CREATE TABLE StudentTutorAssignment (
    studentId INT,
    tutorId INT,
    gigId INT,
    assignedDate DATE NOT NULL,
    PRIMARY KEY (studentId, tutorId, gigId),
    FOREIGN KEY (studentId) REFERENCES Student(studentId) ON DELETE CASCADE,
    FOREIGN KEY (tutorId) REFERENCES Tutor(tutorId) ON DELETE CASCADE,
    FOREIGN KEY (gigId) REFERENCES Gig(gigId) ON DELETE CASCADE
);

CREATE TABLE Admin (
    adminId INT PRIMARY KEY AUTO_INCREMENT,
    fullName VARCHAR(100) NOT NULL,  -- Added length for VARCHAR
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    phoneNumber VARCHAR(15) NOT NULL  -- Added length for VARCHAR
    designation ENUM('teamLead','member') DEFAULT 'member';-- newly added in DDL check for bugs if any in backend and frontend
);

CREATE TABLE AdminGigAssignment (
    adminId INT,
    gigId INT,
    assignedDate DATE,
    PRIMARY KEY (adminId, gigId),
    FOREIGN KEY (gigId) REFERENCES Gig(gigId) ON DELETE CASCADE
);
